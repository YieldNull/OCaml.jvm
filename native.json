{
  "com": {
    "sun": {
      "demo": {
        "jvmti": {
          "hprof": {
            "Tracker.class": {
              "nativeCallSite": "(Ljava/lang/Object;II)V",
              "nativeNewArray": "(Ljava/lang/Object;Ljava/lang/Object;)V",
              "nativeObjectInit": "(Ljava/lang/Object;Ljava/lang/Object;)V",
              "nativeReturnSite": "(Ljava/lang/Object;II)V"
            }
          }
        }
      },
      "imageio": {
        "plugins": {
          "jpeg": {
            "JPEGImageReader.class": {
              "abortRead": "(J)V",
              "disposeReader": "(J)V",
              "initJPEGImageReader": "()J",
              "initReaderIDs":
                "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V",
              "readImage":
                "(J[BI[I[IIIIIII[Ljavax/imageio/plugins/jpeg/JPEGQTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;IIZ)Z",
              "readImageHeader": "(JZZ)Z",
              "resetLibraryState": "(J)V",
              "resetReader": "(J)V",
              "setOutColorSpace": "(JI)V",
              "setSource": "(J)V"
            },
            "JPEGImageWriter.class": {
              "abortWrite": "(J)V",
              "disposeWriter": "(J)V",
              "initJPEGImageWriter": "()J",
              "initWriterIDs": "(Ljava/lang/Class;Ljava/lang/Class;)V",
              "resetWriter": "(J)V",
              "setDest": "(J)V",
              "writeImage":
                "(J[BIII[IIIIII[Ljavax/imageio/plugins/jpeg/JPEGQTable;Z[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;ZZZI[I[I[I[I[IZI)Z",
              "writeTables":
                "(J[Ljavax/imageio/plugins/jpeg/JPEGQTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;)V"
            }
          }
        }
      },
      "java": {
        "swing": {
          "plaf": {
            "gtk": {
              "GTKEngine.class": {
                "nativeFinishPainting": "([III)I",
                "nativeSetRangeValue": "(IDDDD)V",
                "nativeStartPainting": "(II)V",
                "native_get_gtk_setting": "(I)Ljava/lang/Object;",
                "native_paint_arrow": "(IIILjava/lang/String;IIIII)V",
                "native_paint_background": "(IIIIII)V",
                "native_paint_box": "(IIILjava/lang/String;IIIIII)V",
                "native_paint_box_gap": "(IIILjava/lang/String;IIIIIII)V",
                "native_paint_check": "(IILjava/lang/String;IIII)V",
                "native_paint_expander": "(IILjava/lang/String;IIIII)V",
                "native_paint_extension": "(IIILjava/lang/String;IIIII)V",
                "native_paint_flat_box": "(IIILjava/lang/String;IIIIZ)V",
                "native_paint_focus": "(IILjava/lang/String;IIII)V",
                "native_paint_handle": "(IIILjava/lang/String;IIIII)V",
                "native_paint_hline": "(IILjava/lang/String;IIII)V",
                "native_paint_option": "(IILjava/lang/String;IIII)V",
                "native_paint_shadow": "(IIILjava/lang/String;IIIIII)V",
                "native_paint_slider": "(IIILjava/lang/String;IIIII)V",
                "native_paint_vline": "(IILjava/lang/String;IIII)V",
                "native_switch_theme": "()V"
              },
              "GTKStyle.class": {
                "nativeGetClassValue":
                  "(ILjava/lang/String;)Ljava/lang/Object;",
                "nativeGetColorForState": "(III)I",
                "nativeGetPangoFontName": "(I)Ljava/lang/String;",
                "nativeGetXThickness": "(I)I",
                "nativeGetYThickness": "(I)I"
              }
            }
          }
        },
        "util": {
          "jar": {
            "pack": {
              "NativeUnpack.class": {
                "finish": "()J",
                "getNextFile": "([Ljava/lang/Object;)Z",
                "getOption": "(Ljava/lang/String;)Ljava/lang/String;",
                "getUnusedInput": "()Ljava/nio/ByteBuffer;",
                "initIDs": "()V",
                "setOption": "(Ljava/lang/String;Ljava/lang/String;)Z",
                "start": "(Ljava/nio/ByteBuffer;J)J"
              }
            }
          }
        }
      },
      "media": {
        "sound": {
          "DirectAudioDevice.class": {
            "nAvailable": "(JZ)I",
            "nClose": "(JZ)V",
            "nFlush": "(JZ)V",
            "nGetBufferSize": "(JZ)I",
            "nGetBytePosition": "(JZJ)J",
            "nGetFormats": "(IIZLjava/util/Vector;)V",
            "nIsStillDraining": "(JZ)Z",
            "nOpen": "(IIZIFIIIZZI)J",
            "nRead": "(J[BIII)I",
            "nRequiresServicing": "(JZ)Z",
            "nService": "(JZ)V",
            "nSetBytePosition": "(JZJ)V",
            "nStart": "(JZ)V",
            "nStop": "(JZ)V",
            "nWrite": "(J[BIIIFF)I"
          },
          "DirectAudioDeviceProvider.class": {
            "nGetNumDevices": "()I",
            "nNewDirectAudioDeviceInfo":
              "(I)Lcom/sun/media/sound/DirectAudioDeviceProvider$DirectAudioDeviceInfo;"
          },
          "MidiInDevice.class": {
            "nClose": "(J)V",
            "nGetMessages": "(J)V",
            "nGetTimeStamp": "(J)J",
            "nOpen": "(I)J",
            "nStart": "(J)V",
            "nStop": "(J)V"
          },
          "MidiInDeviceProvider.class": {
            "nGetDescription": "(I)Ljava/lang/String;",
            "nGetName": "(I)Ljava/lang/String;",
            "nGetNumDevices": "()I",
            "nGetVendor": "(I)Ljava/lang/String;",
            "nGetVersion": "(I)Ljava/lang/String;"
          },
          "MidiOutDevice.class": {
            "nClose": "(J)V",
            "nGetTimeStamp": "(J)J",
            "nOpen": "(I)J",
            "nSendLongMessage": "(J[BIJ)V",
            "nSendShortMessage": "(JIJ)V"
          },
          "MidiOutDeviceProvider.class": {
            "nGetDescription": "(I)Ljava/lang/String;",
            "nGetName": "(I)Ljava/lang/String;",
            "nGetNumDevices": "()I",
            "nGetVendor": "(I)Ljava/lang/String;",
            "nGetVersion": "(I)Ljava/lang/String;"
          },
          "Platform.class": {
            "nGetExtraLibraries": "()Ljava/lang/String;",
            "nGetLibraryForFeature": "(I)I",
            "nIsBigEndian": "()Z",
            "nIsSigned8": "()Z"
          },
          "PortMixer.class": {
            "nClose": "(J)V",
            "nControlGetFloatValue": "(J)F",
            "nControlGetIntValue": "(J)I",
            "nControlSetFloatValue": "(JF)V",
            "nControlSetIntValue": "(JI)V",
            "nGetControls": "(JILjava/util/Vector;)V",
            "nGetPortCount": "(J)I",
            "nGetPortName": "(JI)Ljava/lang/String;",
            "nGetPortType": "(JI)I",
            "nOpen": "(I)J"
          },
          "PortMixerProvider.class": {
            "nGetNumDevices": "()I",
            "nNewPortMixerInfo":
              "(I)Lcom/sun/media/sound/PortMixerProvider$PortMixerInfo;"
          }
        }
      },
      "security": {
        "auth": {
          "module": { "UnixSystem.class": { "getUnixInfo": "()V" } }
        }
      }
    }
  },
  "java": {
    "awt": {
      "AWTEvent.class": {
        "initIDs": "()V",
        "nativeSetSource": "(Ljava/awt/peer/ComponentPeer;)V"
      },
      "Button.class": { "initIDs": "()V" },
      "Checkbox.class": { "initIDs": "()V" },
      "CheckboxMenuItem.class": { "initIDs": "()V" },
      "Choice.class": { "initIDs": "()V" },
      "Color.class": { "initIDs": "()V" },
      "Component.class": { "initIDs": "()V" },
      "Container.class": { "initIDs": "()V" },
      "Cursor.class": { "finalizeImpl": "(J)V", "initIDs": "()V" },
      "Dialog.class": { "initIDs": "()V" },
      "Dimension.class": { "initIDs": "()V" },
      "Event.class": { "initIDs": "()V" },
      "FileDialog.class": { "initIDs": "()V" },
      "Font.class": { "initIDs": "()V" },
      "FontMetrics.class": { "initIDs": "()V" },
      "Frame.class": { "initIDs": "()V" },
      "Insets.class": { "initIDs": "()V" },
      "KeyboardFocusManager.class": { "initIDs": "()V" },
      "Label.class": { "initIDs": "()V" },
      "Menu.class": { "initIDs": "()V" },
      "MenuBar.class": { "initIDs": "()V" },
      "MenuComponent.class": { "initIDs": "()V" },
      "MenuItem.class": { "initIDs": "()V" },
      "Rectangle.class": { "initIDs": "()V" },
      "ScrollPane.class": { "initIDs": "()V" },
      "ScrollPaneAdjustable.class": { "initIDs": "()V" },
      "Scrollbar.class": { "initIDs": "()V" },
      "SplashScreen.class": {
        "_close": "(J)V",
        "_getBounds": "(J)Ljava/awt/Rectangle;",
        "_getImageFileName": "(J)Ljava/lang/String;",
        "_getImageJarName": "(J)Ljava/lang/String;",
        "_getInstance": "()J",
        "_getScaleFactor": "(J)F",
        "_isVisible": "(J)Z",
        "_setImageData": "(J[B)Z",
        "_update": "(J[IIIIII)V"
      },
      "TextArea.class": { "initIDs": "()V" },
      "TextField.class": { "initIDs": "()V" },
      "Toolkit.class": { "initIDs": "()V" },
      "TrayIcon.class": { "initIDs": "()V" },
      "Window.class": { "initIDs": "()V" },
      "event": {
        "InputEvent.class": { "initIDs": "()V" },
        "KeyEvent.class": { "initIDs": "()V" },
        "MouseEvent.class": { "initIDs": "()V" }
      },
      "image": {
        "BufferedImage.class": { "initIDs": "()V" },
        "ColorModel.class": { "initIDs": "()V" },
        "ComponentSampleModel.class": { "initIDs": "()V" },
        "IndexColorModel.class": { "initIDs": "()V" },
        "Kernel.class": { "initIDs": "()V" },
        "Raster.class": { "initIDs": "()V" },
        "SampleModel.class": { "initIDs": "()V" },
        "SinglePixelPackedSampleModel.class": { "initIDs": "()V" }
      }
    },
    "io": {
      "Console.class": {
        "echo": "(Z)Z",
        "encoding": "()Ljava/lang/String;",
        "istty": "()Z"
      },
      "FileDescriptor.class": { "initIDs": "()V", "sync": "()V" },
      "FileInputStream.class": {
        "available": "()I",
        "close0": "()V",
        "initIDs": "()V",
        "open0": "(Ljava/lang/String;)V",
        "read0": "()I",
        "readBytes": "([BII)I",
        "skip": "(J)J"
      },
      "FileOutputStream.class": {
        "close0": "()V",
        "initIDs": "()V",
        "open0": "(Ljava/lang/String;Z)V",
        "write": "(IZ)V",
        "writeBytes": "([BIIZ)V"
      },
      "ObjectInputStream.class": {
        "bytesToDoubles": "([BI[DII)V",
        "bytesToFloats": "([BI[FII)V"
      },
      "ObjectOutputStream.class": {
        "doublesToBytes": "([DI[BII)V",
        "floatsToBytes": "([FI[BII)V"
      },
      "ObjectStreamClass.class": {
        "hasStaticInitializer": "(Ljava/lang/Class;)Z",
        "initNative": "()V"
      },
      "RandomAccessFile.class": {
        "close0": "()V",
        "getFilePointer": "()J",
        "initIDs": "()V",
        "length": "()J",
        "open0": "(Ljava/lang/String;I)V",
        "read0": "()I",
        "readBytes": "([BII)I",
        "seek0": "(J)V",
        "setLength": "(J)V",
        "write0": "(I)V",
        "writeBytes": "([BII)V"
      },
      "UnixFileSystem.class": {
        "canonicalize0": "(Ljava/lang/String;)Ljava/lang/String;",
        "checkAccess": "(Ljava/io/File;I)Z",
        "createDirectory": "(Ljava/io/File;)Z",
        "createFileExclusively": "(Ljava/lang/String;)Z",
        "delete0": "(Ljava/io/File;)Z",
        "getBooleanAttributes0": "(Ljava/io/File;)I",
        "getLastModifiedTime": "(Ljava/io/File;)J",
        "getLength": "(Ljava/io/File;)J",
        "getSpace": "(Ljava/io/File;I)J",
        "initIDs": "()V",
        "list": "(Ljava/io/File;)[Ljava/lang/String;",
        "rename0": "(Ljava/io/File;Ljava/io/File;)Z",
        "setLastModifiedTime": "(Ljava/io/File;J)Z",
        "setPermission": "(Ljava/io/File;IZZ)Z",
        "setReadOnly": "(Ljava/io/File;)Z"
      }
    },
    "lang": {
      "Class.class": {
        "desiredAssertionStatus0": "(Ljava/lang/Class;)Z",
        "forName0":
          "(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;",
        "getComponentType": "()Ljava/lang/Class;",
        "getConstantPool": "()Lsun/reflect/ConstantPool;",
        "getDeclaredClasses0": "()[Ljava/lang/Class;",
        "getDeclaredConstructors0": "(Z)[Ljava/lang/reflect/Constructor;",
        "getDeclaredFields0": "(Z)[Ljava/lang/reflect/Field;",
        "getDeclaredMethods0": "(Z)[Ljava/lang/reflect/Method;",
        "getDeclaringClass0": "()Ljava/lang/Class;",
        "getEnclosingMethod0": "()[Ljava/lang/Object;",
        "getGenericSignature0": "()Ljava/lang/String;",
        "getInterfaces0": "()[Ljava/lang/Class;",
        "getModifiers": "()I",
        "getName0": "()Ljava/lang/String;",
        "getPrimitiveClass": "(Ljava/lang/String;)Ljava/lang/Class;",
        "getProtectionDomain0": "()Ljava/security/ProtectionDomain;",
        "getRawAnnotations": "()[B",
        "getRawTypeAnnotations": "()[B",
        "getSigners": "()[Ljava/lang/Object;",
        "getSuperclass": "()Ljava/lang/Class;",
        "isArray": "()Z",
        "isAssignableFrom": "(Ljava/lang/Class;)Z",
        "isInstance": "(Ljava/lang/Object;)Z",
        "isInterface": "()Z",
        "isPrimitive": "()Z",
        "registerNatives": "()V",
        "setSigners": "([Ljava/lang/Object;)V"
      },
      "ClassLoader$NativeLibrary.class": {
        "find": "(Ljava/lang/String;)J",
        "load": "(Ljava/lang/String;Z)V",
        "unload": "(Ljava/lang/String;Z)V"
      },
      "ClassLoader.class": {
        "defineClass0":
          "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;",
        "defineClass1":
          "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
        "defineClass2":
          "(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
        "findBootstrapClass": "(Ljava/lang/String;)Ljava/lang/Class;",
        "findBuiltinLib": "(Ljava/lang/String;)Ljava/lang/String;",
        "findLoadedClass0": "(Ljava/lang/String;)Ljava/lang/Class;",
        "registerNatives": "()V",
        "resolveClass0": "(Ljava/lang/Class;)V",
        "retrieveDirectives": "()Ljava/lang/AssertionStatusDirectives;"
      },
      "Compiler.class": {
        "command": "(Ljava/lang/Object;)Ljava/lang/Object;",
        "compileClass": "(Ljava/lang/Class;)Z",
        "compileClasses": "(Ljava/lang/String;)Z",
        "disable": "()V",
        "enable": "()V",
        "initialize": "()V",
        "registerNatives": "()V"
      },
      "Double.class": {
        "doubleToRawLongBits": "(D)J",
        "longBitsToDouble": "(J)D"
      },
      "Float.class": {
        "floatToRawIntBits": "(F)I",
        "intBitsToFloat": "(I)F"
      },
      "Object.class": {
        "clone": "()Ljava/lang/Object;",
        "getClass": "()Ljava/lang/Class;",
        "hashCode": "()I",
        "notify": "()V",
        "notifyAll": "()V",
        "registerNatives": "()V",
        "wait": "(J)V"
      },
      "Package.class": {
        "getSystemPackage0": "(Ljava/lang/String;)Ljava/lang/String;",
        "getSystemPackages0": "()[Ljava/lang/String;"
      },
      "ProcessEnvironment.class": { "environ": "()[[B" },
      "Runtime.class": {
        "availableProcessors": "()I",
        "freeMemory": "()J",
        "gc": "()V",
        "maxMemory": "()J",
        "runFinalization0": "()V",
        "totalMemory": "()J",
        "traceInstructions": "(Z)V",
        "traceMethodCalls": "(Z)V"
      },
      "SecurityManager.class": {
        "classDepth": "(Ljava/lang/String;)I",
        "classLoaderDepth0": "()I",
        "currentClassLoader0": "()Ljava/lang/ClassLoader;",
        "currentLoadedClass0": "()Ljava/lang/Class;",
        "getClassContext": "()[Ljava/lang/Class;"
      },
      "Shutdown.class": { "halt0": "(I)V", "runAllFinalizers": "()V" },
      "StrictMath.class": {
        "IEEEremainder": "(DD)D",
        "acos": "(D)D",
        "asin": "(D)D",
        "atan": "(D)D",
        "atan2": "(DD)D",
        "cbrt": "(D)D",
        "cos": "(D)D",
        "cosh": "(D)D",
        "exp": "(D)D",
        "expm1": "(D)D",
        "hypot": "(DD)D",
        "log": "(D)D",
        "log10": "(D)D",
        "log1p": "(D)D",
        "pow": "(DD)D",
        "sin": "(D)D",
        "sinh": "(D)D",
        "sqrt": "(D)D",
        "tan": "(D)D",
        "tanh": "(D)D"
      },
      "String.class": { "intern": "()Ljava/lang/String;" },
      "System.class": {
        "arraycopy": "(Ljava/lang/Object;ILjava/lang/Object;II)V",
        "currentTimeMillis": "()J",
        "identityHashCode": "(Ljava/lang/Object;)I",
        "initProperties": "(Ljava/util/Properties;)Ljava/util/Properties;",
        "mapLibraryName": "(Ljava/lang/String;)Ljava/lang/String;",
        "nanoTime": "()J",
        "registerNatives": "()V",
        "setErr0": "(Ljava/io/PrintStream;)V",
        "setIn0": "(Ljava/io/InputStream;)V",
        "setOut0": "(Ljava/io/PrintStream;)V"
      },
      "Thread.class": {
        "countStackFrames": "()I",
        "currentThread": "()Ljava/lang/Thread;",
        "dumpThreads": "([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
        "getThreads": "()[Ljava/lang/Thread;",
        "holdsLock": "(Ljava/lang/Object;)Z",
        "interrupt0": "()V",
        "isAlive": "()Z",
        "isInterrupted": "(Z)Z",
        "registerNatives": "()V",
        "resume0": "()V",
        "setNativeName": "(Ljava/lang/String;)V",
        "setPriority0": "(I)V",
        "sleep": "(J)V",
        "start0": "()V",
        "stop0": "(Ljava/lang/Object;)V",
        "suspend0": "()V",
        "yield": "()V"
      },
      "Throwable.class": {
        "fillInStackTrace": "(I)Ljava/lang/Throwable;",
        "getStackTraceDepth": "()I",
        "getStackTraceElement": "(I)Ljava/lang/StackTraceElement;"
      },
      "UNIXProcess.class": {
        "destroyProcess": "(IZ)V",
        "forkAndExec": "(I[B[B[BI[BI[B[IZ)I",
        "init": "()V",
        "waitForProcessExit": "(I)I"
      },
      "invoke": {
        "MethodHandle.class": {
          "invoke": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "invokeBasic": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "invokeExact": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "linkToInterface": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "linkToSpecial": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "linkToStatic": "([Ljava/lang/Object;)Ljava/lang/Object;",
          "linkToVirtual": "([Ljava/lang/Object;)Ljava/lang/Object;"
        },
        "MethodHandleNatives.class": {
          "expand": "(Ljava/lang/invoke/MemberName;)V",
          "getConstant": "(I)I",
          "getMemberVMInfo":
            "(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;",
          "getMembers":
            "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class;I[Ljava/lang/invoke/MemberName;)I",
          "getNamedCon": "(I[Ljava/lang/Object;)I",
          "init": "(Ljava/lang/invoke/MemberName;Ljava/lang/Object;)V",
          "objectFieldOffset": "(Ljava/lang/invoke/MemberName;)J",
          "registerNatives": "()V",
          "resolve":
            "(Ljava/lang/invoke/MemberName;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;",
          "setCallSiteTargetNormal":
            "(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
          "setCallSiteTargetVolatile":
            "(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
          "staticFieldBase":
            "(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;",
          "staticFieldOffset": "(Ljava/lang/invoke/MemberName;)J"
        }
      },
      "reflect": {
        "Array.class": {
          "get": "(Ljava/lang/Object;I)Ljava/lang/Object;",
          "getBoolean": "(Ljava/lang/Object;I)Z",
          "getByte": "(Ljava/lang/Object;I)B",
          "getChar": "(Ljava/lang/Object;I)C",
          "getDouble": "(Ljava/lang/Object;I)D",
          "getFloat": "(Ljava/lang/Object;I)F",
          "getInt": "(Ljava/lang/Object;I)I",
          "getLength": "(Ljava/lang/Object;)I",
          "getLong": "(Ljava/lang/Object;I)J",
          "getShort": "(Ljava/lang/Object;I)S",
          "multiNewArray": "(Ljava/lang/Class;[I)Ljava/lang/Object;",
          "newArray": "(Ljava/lang/Class;I)Ljava/lang/Object;",
          "set": "(Ljava/lang/Object;ILjava/lang/Object;)V",
          "setBoolean": "(Ljava/lang/Object;IZ)V",
          "setByte": "(Ljava/lang/Object;IB)V",
          "setChar": "(Ljava/lang/Object;IC)V",
          "setDouble": "(Ljava/lang/Object;ID)V",
          "setFloat": "(Ljava/lang/Object;IF)V",
          "setInt": "(Ljava/lang/Object;II)V",
          "setLong": "(Ljava/lang/Object;IJ)V",
          "setShort": "(Ljava/lang/Object;IS)V"
        },
        "Executable.class": {
          "getParameters0": "()[Ljava/lang/reflect/Parameter;",
          "getTypeAnnotationBytes0": "()[B"
        },
        "Field.class": { "getTypeAnnotationBytes0": "()[B" },
        "Proxy.class": {
          "defineClass0":
            "(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;"
        }
      }
    },
    "net": {
      "DatagramPacket.class": { "init": "()V" },
      "Inet4Address.class": { "init": "()V" },
      "Inet4AddressImpl.class": {
        "getHostByAddr": "([B)Ljava/lang/String;",
        "getLocalHostName": "()Ljava/lang/String;",
        "isReachable0": "([BI[BI)Z",
        "lookupAllHostAddr": "(Ljava/lang/String;)[Ljava/net/InetAddress;"
      },
      "Inet6Address.class": { "init": "()V" },
      "Inet6AddressImpl.class": {
        "getHostByAddr": "([B)Ljava/lang/String;",
        "getLocalHostName": "()Ljava/lang/String;",
        "isReachable0": "([BII[BII)Z",
        "lookupAllHostAddr": "(Ljava/lang/String;)[Ljava/net/InetAddress;"
      },
      "InetAddress.class": { "init": "()V" },
      "InetAddressImplFactory.class": { "isIPv6Supported": "()Z" },
      "NetworkInterface.class": {
        "getAll": "()[Ljava/net/NetworkInterface;",
        "getByIndex0": "(I)Ljava/net/NetworkInterface;",
        "getByInetAddress0":
          "(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;",
        "getByName0": "(Ljava/lang/String;)Ljava/net/NetworkInterface;",
        "getMTU0": "(Ljava/lang/String;I)I",
        "getMacAddr0": "([BLjava/lang/String;I)[B",
        "init": "()V",
        "isLoopback0": "(Ljava/lang/String;I)Z",
        "isP2P0": "(Ljava/lang/String;I)Z",
        "isUp0": "(Ljava/lang/String;I)Z",
        "supportsMulticast0": "(Ljava/lang/String;I)Z"
      },
      "PlainDatagramSocketImpl.class": {
        "bind0": "(ILjava/net/InetAddress;)V",
        "connect0": "(Ljava/net/InetAddress;I)V",
        "dataAvailable": "()I",
        "datagramSocketClose": "()V",
        "datagramSocketCreate": "()V",
        "disconnect0": "(I)V",
        "getTTL": "()B",
        "getTimeToLive": "()I",
        "init": "()V",
        "join": "(Ljava/net/InetAddress;Ljava/net/NetworkInterface;)V",
        "leave": "(Ljava/net/InetAddress;Ljava/net/NetworkInterface;)V",
        "peek": "(Ljava/net/InetAddress;)I",
        "peekData": "(Ljava/net/DatagramPacket;)I",
        "receive0": "(Ljava/net/DatagramPacket;)V",
        "send": "(Ljava/net/DatagramPacket;)V",
        "setTTL": "(B)V",
        "setTimeToLive": "(I)V",
        "socketGetOption": "(I)Ljava/lang/Object;",
        "socketSetOption0": "(ILjava/lang/Object;)V"
      },
      "PlainSocketImpl.class": {
        "initProto": "()V",
        "socketAccept": "(Ljava/net/SocketImpl;)V",
        "socketAvailable": "()I",
        "socketBind": "(Ljava/net/InetAddress;I)V",
        "socketClose0": "(Z)V",
        "socketConnect": "(Ljava/net/InetAddress;II)V",
        "socketCreate": "(Z)V",
        "socketGetOption": "(ILjava/lang/Object;)I",
        "socketListen": "(I)V",
        "socketSendUrgentData": "(I)V",
        "socketSetOption0": "(IZLjava/lang/Object;)V",
        "socketShutdown": "(I)V"
      },
      "SocketInputStream.class": {
        "init": "()V",
        "socketRead0": "(Ljava/io/FileDescriptor;[BIII)I"
      },
      "SocketOutputStream.class": {
        "init": "()V",
        "socketWrite0": "(Ljava/io/FileDescriptor;[BII)V"
      }
    },
    "nio": {
      "Bits.class": {
        "copyFromIntArray": "(Ljava/lang/Object;JJJ)V",
        "copyFromLongArray": "(Ljava/lang/Object;JJJ)V",
        "copyFromShortArray": "(Ljava/lang/Object;JJJ)V",
        "copyToIntArray": "(JLjava/lang/Object;JJ)V",
        "copyToLongArray": "(JLjava/lang/Object;JJ)V",
        "copyToShortArray": "(JLjava/lang/Object;JJ)V"
      },
      "MappedByteBuffer.class": {
        "force0": "(Ljava/io/FileDescriptor;JJ)V",
        "isLoaded0": "(JJI)Z",
        "load0": "(JJ)V"
      }
    },
    "security": {
      "AccessController.class": {
        "doPrivileged":
          "(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;",
        "doPrivileged":
          "(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;",
        "doPrivileged":
          "(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;",
        "doPrivileged":
          "(Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
        "getInheritedAccessControlContext":
          "()Ljava/security/AccessControlContext;",
        "getStackAccessControlContext":
          "()Ljava/security/AccessControlContext;"
      }
    },
    "util": {
      "TimeZone.class": {
        "getSystemGMTOffsetID": "()Ljava/lang/String;",
        "getSystemTimeZoneID": "(Ljava/lang/String;)Ljava/lang/String;"
      },
      "concurrent": {
        "atomic": { "AtomicLong.class": { "VMSupportsCS8": "()Z" } }
      },
      "jar": {
        "JarFile.class": { "getMetaInfEntryNames": "()[Ljava/lang/String;" }
      },
      "logging": { "FileHandler.class": { "isSetUID": "()Z" } },
      "prefs": {
        "FileSystemPreferences.class": {
          "chmod": "(Ljava/lang/String;I)I",
          "lockFile0": "(Ljava/lang/String;IZ)[I",
          "unlockFile0": "(I)I"
        }
      },
      "zip": {
        "Adler32.class": {
          "update": "(II)I",
          "updateByteBuffer": "(IJII)I",
          "updateBytes": "(I[BII)I"
        },
        "CRC32.class": {
          "update": "(II)I",
          "updateByteBuffer": "(IJII)I",
          "updateBytes": "(I[BII)I"
        },
        "Deflater.class": {
          "deflateBytes": "(J[BIII)I",
          "end": "(J)V",
          "getAdler": "(J)I",
          "init": "(IIZ)J",
          "initIDs": "()V",
          "reset": "(J)V",
          "setDictionary": "(J[BII)V"
        },
        "Inflater.class": {
          "end": "(J)V",
          "getAdler": "(J)I",
          "inflateBytes": "(J[BII)I",
          "init": "(Z)J",
          "initIDs": "()V",
          "reset": "(J)V",
          "setDictionary": "(J[BII)V"
        },
        "ZipFile.class": {
          "close": "(J)V",
          "freeEntry": "(JJ)V",
          "getCommentBytes": "(J)[B",
          "getEntry": "(J[BZ)J",
          "getEntryBytes": "(JI)[B",
          "getEntryCSize": "(J)J",
          "getEntryCrc": "(J)J",
          "getEntryFlag": "(J)I",
          "getEntryMethod": "(J)I",
          "getEntrySize": "(J)J",
          "getEntryTime": "(J)J",
          "getNextEntry": "(JI)J",
          "getTotal": "(J)I",
          "getZipMessage": "(J)Ljava/lang/String;",
          "initIDs": "()V",
          "open": "(Ljava/lang/String;IJZ)J",
          "read": "(JJJ[BII)I",
          "startsWithLOC": "(J)Z"
        }
      }
    }
  },
  "jdk": {
    "internal": {
      "cmm": {
        "SystemResourcePressureImpl.class": {
          "getVmMemoryPressure": "()I",
          "setVmMemoryPressure": "(I)I"
        }
      },
      "instrumentation": {
        "Tracer.class": {
          "init": "()V",
          "retransformClasses0": "([Ljava/lang/Class;)V"
        }
      }
    },
    "management": {
      "resource": {
        "internal": {
          "ResourceNatives.class": {
            "computeRetainedMemory0": "([IB)V",
            "createResourceContext0": "(Ljava/lang/String;)I",
            "destroyResourceContext0": "(II)V",
            "featuresEnabled0": "()I",
            "getContextsRetainedMemory0": "([I[J[B)Z",
            "getCurrentThreadAllocatedHeap0": "()J",
            "getCurrentThreadCPUTime0": "()J",
            "getThreadResourceContext0": "(J)I",
            "getThreadStats0": "([J[J[J)V",
            "sampleInterval0": "()I",
            "setRetainedMemoryNotificationEnabled0": "(Ljava/lang/Object;)V",
            "setThreadResourceContext0": "(JI)I"
          }
        }
      }
    }
  },
  "sun": {
    "awt": {
      "DebugSettings.class": {
        "setCTracingOn": "(ZLjava/lang/String;I)V",
        "setCTracingOn": "(ZLjava/lang/String;)V",
        "setCTracingOn": "(Z)V"
      },
      "DefaultMouseInfoPeer.class": {
        "fillPointWithCoords": "(Ljava/awt/Point;)I",
        "isWindowUnderMouse": "(Ljava/awt/Window;)Z"
      },
      "FcFontManager.class": {
        "getFontPathNative": "(ZZ)Ljava/lang/String;"
      },
      "FontDescriptor.class": { "initIDs": "()V" },
      "PlatformFont.class": { "initIDs": "()V" },
      "SunToolkit.class": { "closeSplashScreen": "()V" },
      "UNIXToolkit.class": {
        "check_gtk": "()Z",
        "gtkCheckVersionImpl": "(III)Z",
        "load_gtk": "()Z",
        "load_gtk_icon": "(Ljava/lang/String;)Z",
        "load_stock_icon": "(ILjava/lang/String;IILjava/lang/String;)Z",
        "nativeSync": "()V",
        "unload_gtk": "()Z"
      },
      "X11": {
        "GtkFileDialogPeer.class": {
          "initIDs": "()V",
          "quit": "()V",
          "run":
            "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/io/FilenameFilter;ZII)V",
          "setBounds": "(IIIII)V",
          "toFront": "()V"
        },
        "XDesktopPeer.class": { "gnome_url_show": "([B)Z", "init": "()Z" },
        "XFontPeer.class": { "initIDs": "()V" },
        "XInputMethod.class": {
          "adjustStatusWindow": "(J)V",
          "createXICNative": "(J)Z",
          "openXIMNative": "(J)Z",
          "setXICFocusNative": "(JZZ)V"
        },
        "XRobotPeer.class": {
          "getRGBPixelsImpl": "(Lsun/awt/X11GraphicsConfig;IIII[I)V",
          "keyPressImpl": "(I)V",
          "keyReleaseImpl": "(I)V",
          "mouseMoveImpl": "(Lsun/awt/X11GraphicsConfig;II)V",
          "mousePressImpl": "(I)V",
          "mouseReleaseImpl": "(I)V",
          "mouseWheelImpl": "(I)V",
          "setup": "(I[I)V"
        },
        "XToolkit.class": {
          "awt_output_flush": "()V",
          "awt_toolkit_init": "()V",
          "getDefaultScreenData": "()J",
          "getDefaultXColormap": "()J",
          "getEnv": "(Ljava/lang/String;)Ljava/lang/String;",
          "getNumberOfButtonsImpl": "()I",
          "getTrayIconDisplayTimeout": "()J",
          "initIDs": "()V",
          "nativeLoadSystemColors": "([I)V",
          "waitForEvents": "(J)V",
          "wakeup_poll": "()V"
        },
        "XWindow.class": {
          "getAWTKeyCodeForKeySym": "(I)I",
          "getKeySymForAWTKeyCode": "(I)I",
          "getNativeColor":
            "(Ljava/awt/Color;Ljava/awt/GraphicsConfiguration;)I",
          "getTopWindow": "(JJ)J",
          "getWMInsets": "(JJJJJJ)V",
          "getWindowBounds": "(JJJJJ)V",
          "haveCurrentX11InputMethodInstance": "()Z",
          "initIDs": "()V",
          "x11inputMethodLookupString": "(J[J)Z"
        },
        "XWindowPeer.class": {
          "getJvmPID": "()I",
          "getLocalHostname": "()Ljava/lang/String;"
        },
        "XlibWrapper.class": {
          "CallErrorHandler": "(JJJ)I",
          "DefaultScreen": "(J)J",
          "DisplayHeight": "(JJ)J",
          "DisplayHeightMM": "(JJ)J",
          "DisplayWidth": "(JJ)J",
          "DisplayWidthMM": "(JJ)J",
          "DoesBackingStore": "(J)I",
          "ExitSecondaryLoop": "()V",
          "GetProperty": "(JJJ)Ljava/lang/String;",
          "InternAtom": "(JLjava/lang/String;I)J",
          "IsKanaKeyboard": "(J)Z",
          "IsKeypadKey": "(J)Z",
          "IsSunKeyboard": "(J)Z",
          "IsXsunKPBehavior": "(J)Z",
          "PrintXErrorEvent": "(JJ)V",
          "RootWindow": "(JJ)J",
          "ScreenCount": "(J)I",
          "ScreenOfDisplay": "(JJ)J",
          "ServerVendor": "(J)Ljava/lang/String;",
          "SetBitmapShape": "(JJII[I)V",
          "SetProperty": "(JJJLjava/lang/String;)V",
          "SetRectangularShape": "(JJIIIILsun/java2d/pipe/Region;)V",
          "SetToolkitErrorHandler": "()J",
          "SetZOrder": "(JJJ)V",
          "VendorRelease": "(J)I",
          "XAllocColor": "(JJJ)Z",
          "XAllocSizeHints": "()J",
          "XAllocWMHints": "()J",
          "XBell": "(JI)V",
          "XChangeActivePointerGrab": "(JIJJ)V",
          "XChangePropertyImpl": "(JJJJIIJI)V",
          "XChangePropertyS": "(JJJJIILjava/lang/String;)V",
          "XChangeWindowAttributes": "(JJJJ)V",
          "XClearWindow": "(JJ)V",
          "XCloseDisplay": "(J)V",
          "XConfigureWindow": "(JJJJ)V",
          "XConvertCase": "(JJJ)V",
          "XConvertSelection": "(JJJJJJ)V",
          "XCreateBitmapFromData": "(JJJII)J",
          "XCreateFontCursor": "(JI)I",
          "XCreateGC": "(JJJJ)J",
          "XCreateImage": "(JJIIIJIIII)J",
          "XCreatePixmap": "(JJIII)J",
          "XCreatePixmapCursor": "(JJJJJII)J",
          "XCreateWindow": "(JJIIIIIIJJJJ)J",
          "XDeleteProperty": "(JJJ)V",
          "XDestroyImage": "(J)V",
          "XDestroyWindow": "(JJ)V",
          "XDisplayString": "(J)J",
          "XEventsQueued": "(JI)I",
          "XFilterEvent": "(JJ)Z",
          "XFlush": "(J)V",
          "XFree": "(J)V",
          "XFreeCursor": "(JJ)V",
          "XFreeGC": "(JJ)V",
          "XFreeModifiermap": "(J)V",
          "XFreePixmap": "(JJ)V",
          "XGetAtomName": "(JJ)Ljava/lang/String;",
          "XGetDefault":
            "(JLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
          "XGetGeometry": "(JJJJJJJJJ)I",
          "XGetIconSizes": "(JJJJ)I",
          "XGetInputFocus": "(J)J",
          "XGetModifierMapping": "(J)J",
          "XGetPointerMapping": "(JJI)I",
          "XGetSelectionOwner": "(JJ)J",
          "XGetVisualInfo": "(JJJJ)J",
          "XGetWMHints": "(JJJ)V",
          "XGetWMNormalHints": "(JJJJ)I",
          "XGetWindowAttributes": "(JJJ)I",
          "XGetWindowProperty": "(JJJJJJJJJJJJ)I",
          "XGrabKeyboard": "(JJIIIJ)I",
          "XGrabPointer": "(JJIIIIJJJ)I",
          "XGrabServer": "(J)V",
          "XIconifyWindow": "(JJJ)I",
          "XInternAtoms": "(J[Ljava/lang/String;ZJ)I",
          "XKeycodeToKeysym": "(JII)J",
          "XKeysymToKeycode": "(JJ)I",
          "XLowerWindow": "(JJ)V",
          "XMapRaised": "(JJ)V",
          "XMapWindow": "(JJ)V",
          "XMaskEvent": "(JJJ)V",
          "XMaxRequestSize": "(J)J",
          "XMoveResizeWindow": "(JJIIII)V",
          "XMoveWindow": "(JJII)V",
          "XNextEvent": "(JJ)V",
          "XNextSecondaryLoopEvent": "(JJ)Z",
          "XOpenDisplay": "(J)J",
          "XPeekEvent": "(JJ)V",
          "XPutBackEvent": "(JJ)V",
          "XPutImage": "(JJJJIIIIII)V",
          "XQueryBestCursor": "(JJIIJJ)Z",
          "XQueryExtension": "(JLjava/lang/String;JJJ)Z",
          "XQueryKeymap": "(JJ)V",
          "XQueryPointer": "(JJJJJJJJJ)Z",
          "XQueryTree": "(JJJJJJ)I",
          "XRaiseWindow": "(JJ)V",
          "XRefreshKeyboardMapping": "(J)V",
          "XReparentWindow": "(JJJII)V",
          "XResizeWindow": "(JJII)V",
          "XRestackWindows": "(JJI)V",
          "XScreenNumberOfScreen": "(J)J",
          "XSelectInput": "(JJJ)V",
          "XSendEvent": "(JJZJJ)I",
          "XSetCloseDownMode": "(JI)V",
          "XSetErrorHandler": "(J)V",
          "XSetInputFocus": "(JJ)V",
          "XSetInputFocus2": "(JJJ)V",
          "XSetLocaleModifiers": "(Ljava/lang/String;)Ljava/lang/String;",
          "XSetMinMaxHints": "(JJIIIIJ)V",
          "XSetSelectionOwner": "(JJJJ)V",
          "XSetTransientFor": "(JJJ)V",
          "XSetWMHints": "(JJJ)V",
          "XSetWMNormalHints": "(JJJ)V",
          "XSetWindowBackground": "(JJJ)V",
          "XSetWindowBackgroundPixmap": "(JJJ)V",
          "XShapeQueryExtension": "(JJJ)Z",
          "XSupportsLocale": "()Z",
          "XSync": "(JI)V",
          "XSynchronize": "(JZ)I",
          "XTextPropertyToStringList": "([BJ)[Ljava/lang/String;",
          "XTranslateCoordinates": "(JJJJJJJJ)I",
          "XUngrabKeyboard": "(JJ)V",
          "XUngrabPointer": "(JJ)V",
          "XUngrabServer": "(J)V",
          "XUnmapWindow": "(JJ)V",
          "XWindowEvent": "(JJJJ)V",
          "XdbeAllocateBackBufferName": "(JJI)J",
          "XdbeBeginIdiom": "(J)I",
          "XdbeDeallocateBackBufferName": "(JJ)I",
          "XdbeEndIdiom": "(J)I",
          "XdbeQueryExtension": "(JJJ)I",
          "XdbeSwapBuffers": "(JJI)I",
          "XkbFreeKeyboard": "(JJZ)V",
          "XkbGetEffectiveGroup": "(J)I",
          "XkbGetMap": "(JJJ)J",
          "XkbGetUpdatedMap": "(JJJ)J",
          "XkbKeycodeToKeysym": "(JIII)J",
          "XkbLibraryVersion": "(JJ)Z",
          "XkbQueryExtension": "(JJJJJJ)Z",
          "XkbSelectEventDetails": "(JJJJJ)V",
          "XkbSelectEvents": "(JJJJ)V",
          "XkbSetDetectableAutoRepeat": "(JZ)V",
          "XkbTranslateKeyCode": "(JIJJJ)Z",
          "copyIntArray": "(JLjava/lang/Object;I)V",
          "copyLongArray": "(JLjava/lang/Object;I)V",
          "getAddress": "(Ljava/lang/Object;)J",
          "getScreenOfWindow": "(JJ)J",
          "getStringBytes": "(J)[B",
          "memcpy": "(JJJ)V"
        }
      },
      "X11GraphicsConfig.class": {
        "createBackBuffer": "(JI)J",
        "destroyBackBuffer": "(J)V",
        "dispose": "(J)V",
        "getNumColors": "()I",
        "getXResolution": "(I)D",
        "getYResolution": "(I)D",
        "init": "(II)V",
        "initIDs": "()V",
        "isTranslucencyCapable": "(J)Z",
        "makeColorModel": "()Ljava/awt/image/ColorModel;",
        "pGetBounds": "(I)Ljava/awt/Rectangle;",
        "swapBuffers": "(JI)V"
      },
      "X11GraphicsDevice.class": {
        "configDisplayMode": "(IIII)V",
        "enterFullScreenExclusive": "(J)V",
        "enumDisplayModes": "(ILjava/util/ArrayList;)V",
        "exitFullScreenExclusive": "(J)V",
        "getConfigColormap": "(II)I",
        "getConfigDepth": "(II)I",
        "getConfigVisualId": "(II)I",
        "getCurrentDisplayMode": "(I)Ljava/awt/DisplayMode;",
        "getDisplay": "()J",
        "getDoubleBufferVisuals": "(I)V",
        "getNumConfigs": "(I)I",
        "initIDs": "()V",
        "initXrandrExtension": "()Z",
        "isDBESupported": "()Z",
        "resetNativeData": "(I)V"
      },
      "X11GraphicsEnvironment.class": {
        "checkShmExt": "()I",
        "getDefaultScreenNum": "()I",
        "getDisplayString": "()Ljava/lang/String;",
        "getNumScreens": "()I",
        "getXineramaCenterPoint": "()Ljava/awt/Point;",
        "initDisplay": "(Z)V",
        "initGLX": "()Z",
        "initXRender": "(ZZ)Z",
        "pRunningXinerama": "()Z"
      },
      "X11InputMethod.class": {
        "disposeXIC": "()V",
        "initIDs": "()V",
        "isCompositionEnabledNative": "()Z",
        "resetXIC": "()Ljava/lang/String;",
        "setCompositionEnabledNative": "(Z)Z",
        "turnoffStatusWindow": "()V"
      },
      "image": {
        "BufImgSurfaceData.class": {
          "freeNativeICMData": "(J)V",
          "initIDs": "(Ljava/lang/Class;Ljava/lang/Class;)V",
          "initRaster":
            "(Ljava/lang/Object;IIIIIILjava/awt/image/IndexColorModel;)V"
        },
        "ByteComponentRaster.class": { "initIDs": "()V" },
        "BytePackedRaster.class": { "initIDs": "()V" },
        "DataBufferNative.class": {
          "getElem": "(IILsun/java2d/SurfaceData;)I",
          "setElem": "(IIILsun/java2d/SurfaceData;)V"
        },
        "GifImageDecoder.class": {
          "initIDs": "()V",
          "parseImage": "(IIIIZI[B[BLjava/awt/image/IndexColorModel;)Z"
        },
        "ImageRepresentation.class": {
          "initIDs": "()V",
          "setDiffICM":
            "(IIII[IIILjava/awt/image/IndexColorModel;[BIILsun/awt/image/ByteComponentRaster;I)Z",
          "setICMpixels":
            "(IIII[I[BIILsun/awt/image/IntegerComponentRaster;)Z"
        },
        "ImagingLib.class": {
          "convolveBI":
            "(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;Ljava/awt/image/Kernel;I)I",
          "convolveRaster":
            "(Ljava/awt/image/Raster;Ljava/awt/image/Raster;Ljava/awt/image/Kernel;I)I",
          "init": "()Z",
          "lookupByteBI":
            "(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;[[B)I",
          "lookupByteRaster":
            "(Ljava/awt/image/Raster;Ljava/awt/image/Raster;[[B)I",
          "transformBI":
            "(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;[DI)I",
          "transformRaster":
            "(Ljava/awt/image/Raster;Ljava/awt/image/Raster;[DI)I"
        },
        "IntegerComponentRaster.class": { "initIDs": "()V" },
        "JPEGImageDecoder.class": {
          "initIDs": "(Ljava/lang/Class;)V",
          "readImage": "(Ljava/io/InputStream;[B)V"
        },
        "ShortComponentRaster.class": { "initIDs": "()V" },
        "codec": {
          "JPEGImageDecoderImpl.class": {
            "initDecoder": "(Ljava/lang/Class;)V",
            "readJPEGStream":
              "(Ljava/io/InputStream;Lcom/sun/image/codec/jpeg/JPEGDecodeParam;Z)Lcom/sun/image/codec/jpeg/JPEGDecodeParam;"
          },
          "JPEGImageEncoderImpl.class": {
            "initEncoder": "(Ljava/lang/Class;)V",
            "writeJPEGStream":
              "(Lcom/sun/image/codec/jpeg/JPEGEncodeParam;Ljava/awt/image/ColorModel;Ljava/io/OutputStream;Ljava/lang/Object;II)V"
          }
        }
      }
    },
    "dc": {
      "pr": {
        "PathDasher.class": {
          "appendCubic": "(FFFFFF)V",
          "appendLine": "(FF)V",
          "appendQuadratic": "(FFFF)V",
          "beginPath": "()V",
          "beginSubpath": "(FF)V",
          "cClassFinalize": "()V",
          "cClassInitialize": "()V",
          "cInitialize": "(Lsun/dc/path/PathConsumer;)V",
          "closedSubpath": "()V",
          "dispose": "()V",
          "endPath": "()V",
          "getCPathConsumer": "()J",
          "reset": "()V",
          "setDash": "([FF)V",
          "setDashT4": "([F)V",
          "setOutputConsumer": "(Lsun/dc/path/PathConsumer;)V",
          "setOutputT6": "([F)V"
        },
        "PathFiller.class": {
          "appendCubic": "(FFFFFF)V",
          "appendLine": "(FF)V",
          "appendQuadratic": "(FFFF)V",
          "beginPath": "()V",
          "beginSubpath": "(FF)V",
          "cClassFinalize": "()V",
          "cClassInitialize": "()V",
          "cInitialize": "()V",
          "closedSubpath": "()V",
          "dispose": "()V",
          "endPath": "()V",
          "getAlphaBox": "([I)V",
          "getCPathConsumer": "()J",
          "getTileState": "()I",
          "nextTile": "()V",
          "reset": "()V",
          "setFillMode": "(I)V",
          "setOutputArea": "(FFII)V",
          "writeAlpha16": "([CIII)V",
          "writeAlpha8": "([BIII)V"
        },
        "PathStroker.class": {
          "appendCubic": "(FFFFFF)V",
          "appendLine": "(FF)V",
          "appendQuadratic": "(FFFF)V",
          "beginPath": "()V",
          "beginSubpath": "(FF)V",
          "cClassFinalize": "()V",
          "cClassInitialize": "()V",
          "cInitialize": "(Lsun/dc/path/PathConsumer;)V",
          "cInitialize2D": "(Lsun/awt/geom/PathConsumer2D;)V",
          "closedSubpath": "()V",
          "dispose": "()V",
          "endPath": "()V",
          "getCPathConsumer": "()J",
          "reset": "()V",
          "setCaps": "(I)V",
          "setCorners": "(IF)V",
          "setOutputConsumer": "(Lsun/dc/path/PathConsumer;)V",
          "setOutputT6": "([F)V",
          "setPenDiameter": "(F)V",
          "setPenFitting": "(FI)V",
          "setPenT4": "([F)V"
        }
      }
    },
    "font": {
      "FileFontStrike.class": {
        "_getGlyphImageFromWindows": "(Ljava/lang/String;IIIZ)J",
        "initNative": "()Z"
      },
      "FontConfigManager.class": {
        "getFontConfig":
          "(Ljava/lang/String;Lsun/font/FontConfigManager$FontConfigInfo;[Lsun/font/FontConfigManager$FcCompFont;Z)V",
        "getFontConfigAASettings": "(Ljava/lang/String;Ljava/lang/String;)I",
        "getFontConfigVersion": "()I"
      },
      "FreetypeFontScaler.class": {
        "createScalerContextNative": "(J[DIIFF)J",
        "disposeNativeScaler": "(Lsun/font/Font2D;J)V",
        "getFontMetricsNative":
          "(Lsun/font/Font2D;JJ)Lsun/font/StrikeMetrics;",
        "getGlyphAdvanceNative": "(Lsun/font/Font2D;JJI)F",
        "getGlyphCodeNative": "(Lsun/font/Font2D;JC)I",
        "getGlyphImageNative": "(Lsun/font/Font2D;JJI)J",
        "getGlyphMetricsNative":
          "(Lsun/font/Font2D;JJILjava/awt/geom/Point2D$Float;)V",
        "getGlyphOutlineBoundsNative":
          "(Lsun/font/Font2D;JJI)Ljava/awt/geom/Rectangle2D$Float;",
        "getGlyphOutlineNative":
          "(Lsun/font/Font2D;JJIFF)Ljava/awt/geom/GeneralPath;",
        "getGlyphPointNative":
          "(Lsun/font/Font2D;JJII)Ljava/awt/geom/Point2D$Float;",
        "getGlyphVectorOutlineNative":
          "(Lsun/font/Font2D;JJ[IIFF)Ljava/awt/geom/GeneralPath;",
        "getLayoutTableCacheNative": "(J)J",
        "getMissingGlyphCodeNative": "(J)I",
        "getNumGlyphsNative": "(J)I",
        "getUnitsPerEMNative": "(J)J",
        "initIDs": "(Ljava/lang/Class;)V",
        "initNativeScaler": "(Lsun/font/Font2D;IIZI)J"
      },
      "NativeFont.class": {
        "countGlyphs": "([BI)I",
        "fontExists": "([B)Z",
        "getFontMetrics": "(J)Lsun/font/StrikeMetrics;",
        "getGlyphAdvance": "(JI)F",
        "getGlyphImage": "(JI)J",
        "getGlyphImageNoDefault": "(JI)J",
        "haveBitmapFonts": "([B)Z"
      },
      "NativeStrike.class": {
        "createNullScalerContext": "()J",
        "createScalerContext": "([BID)J",
        "getMaxGlyph": "(J)I"
      },
      "NativeStrikeDisposer.class": { "freeNativeScalerContext": "(J)V" },
      "NullFontScaler.class": {
        "getGlyphImage": "(JI)J",
        "getNullScalerContext": "()J"
      },
      "StrikeCache.class": {
        "freeIntMemory": "([IJ)V",
        "freeIntPointer": "(I)V",
        "freeLongMemory": "([JJ)V",
        "freeLongPointer": "(J)V",
        "getGlyphCacheDescription": "([J)V"
      },
      "SunFontManager.class": { "initIDs": "()V" },
      "SunLayoutEngine.class": {
        "initGVIDs": "()V",
        "nativeLayout":
          "(Lsun/font/Font2D;Lsun/font/FontStrike;[FII[CIIIIIIILjava/awt/geom/Point2D$Float;Lsun/font/GlyphLayout$GVData;JJ)V"
      },
      "T2KFontScaler.class": {
        "createScalerContextNative": "(J[DIIFFZ)J",
        "disposeNativeScaler": "(JJ)V",
        "getFontMetricsNative":
          "(Lsun/font/Font2D;JJ)Lsun/font/StrikeMetrics;",
        "getGlyphAdvanceNative": "(Lsun/font/Font2D;JJI)F",
        "getGlyphCodeNative": "(JC)I",
        "getGlyphImageNative": "(Lsun/font/Font2D;JJI)J",
        "getGlyphMetricsNative":
          "(Lsun/font/Font2D;JJILjava/awt/geom/Point2D$Float;)V",
        "getGlyphOutlineBoundsNative":
          "(Lsun/font/Font2D;JJI)Ljava/awt/geom/Rectangle2D$Float;",
        "getGlyphOutlineNative":
          "(Lsun/font/Font2D;JJIFF)Ljava/awt/geom/GeneralPath;",
        "getGlyphPointNative":
          "(Lsun/font/Font2D;JJII)Ljava/awt/geom/Point2D$Float;",
        "getGlyphVectorOutlineNative":
          "(Lsun/font/Font2D;JJ[IIFF)Ljava/awt/geom/GeneralPath;",
        "getLayoutTableCacheNative": "(J)J",
        "getMissingGlyphCodeNative": "(J)I",
        "getNumGlyphsNative": "(J)I",
        "getUnitsPerEMNative": "(J)J",
        "initIDs": "(Ljava/lang/Class;)V",
        "initNativeScaler": "(Lsun/font/Font2D;IIZI[I)J"
      },
      "X11TextRenderer.class": {
        "doDrawGlyphList":
          "(JJLsun/java2d/pipe/Region;Lsun/font/GlyphList;)V"
      }
    },
    "instrument": {
      "InstrumentationImpl.class": {
        "appendToClassLoaderSearch0": "(JLjava/lang/String;Z)V",
        "getAllLoadedClasses0": "(J)[Ljava/lang/Class;",
        "getInitiatedClasses0":
          "(JLjava/lang/ClassLoader;)[Ljava/lang/Class;",
        "getObjectSize0": "(JLjava/lang/Object;)J",
        "isModifiableClass0": "(JLjava/lang/Class;)Z",
        "isRetransformClassesSupported0": "(J)Z",
        "redefineClasses0": "(J[Ljava/lang/instrument/ClassDefinition;)V",
        "retransformClasses0": "(J[Ljava/lang/Class;)V",
        "setHasRetransformableTransformers": "(JZ)V",
        "setNativeMethodPrefixes": "(J[Ljava/lang/String;Z)V"
      }
    },
    "java2d": {
      "DefaultDisposerRecord.class": { "invokeNativeDispose": "(JJ)V" },
      "Disposer.class": { "initIDs": "()V" },
      "SurfaceData.class": {
        "initIDs": "()V",
        "isOpaqueGray": "(Ljava/awt/image/IndexColorModel;)Z"
      },
      "cmm": {
        "kcms": {
          "CMM.class": {
            "cmmColorConvert":
              "(JLsun/java2d/cmm/kcms/CMMImageLayout;Lsun/java2d/cmm/kcms/CMMImageLayout;)I",
            "cmmCombineTransforms":
              "([Lsun/java2d/cmm/kcms/ICC_Transform;Lsun/java2d/cmm/kcms/ICC_Transform;)I",
            "cmmFreeProfile": "(J)I",
            "cmmFreeTransform": "(J)I",
            "cmmGetNumComponents": "(J[I)I",
            "cmmGetProfileData": "(J[B)I",
            "cmmGetProfileSize": "(J[I)I",
            "cmmGetTagData": "(JI[B)I",
            "cmmGetTagSize": "(JI[I)I",
            "cmmGetTransform":
              "(Ljava/awt/color/ICC_Profile;IILsun/java2d/cmm/kcms/ICC_Transform;)I",
            "cmmInit": "()I",
            "cmmLoadProfile": "([B[J)I",
            "cmmSetTagData": "(JI[B)I",
            "cmmTerminate": "()I"
          }
        },
        "lcms": {
          "LCMS.class": {
            "colorConvert":
              "(Lsun/java2d/cmm/lcms/LCMSTransform;Lsun/java2d/cmm/lcms/LCMSImageLayout;Lsun/java2d/cmm/lcms/LCMSImageLayout;)V",
            "createNativeTransform": "([JIIZIZLjava/lang/Object;)J",
            "freeTransform": "(J)V",
            "getProfileDataNative": "(J[B)V",
            "getProfileID":
              "(Ljava/awt/color/ICC_Profile;)Lsun/java2d/cmm/lcms/LCMSProfile;",
            "getProfileSizeNative": "(J)I",
            "getTagNative": "(JI)[B",
            "initLCMS":
              "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V",
            "loadProfileNative": "([BLjava/lang/Object;)J",
            "setTagDataNative": "(JI[B)V"
          }
        }
      },
      "jules": {
        "JulesAATileGenerator.class": {
          "freePixmanImgPtr": "(J)V",
          "rasterizeTrapezoidsNative": "(J[I[II[BII)J"
        },
        "JulesPathBuf.class": {
          "tesselateFillNative": "([I[BII[IIIIIII)[I",
          "tesselateStrokeNative": "([I[BII[IIDIID[DIDDDDDDDIIII)[I"
        }
      },
      "loops": {
        "Blit.class": {
          "Blit":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;IIIIII)V"
        },
        "BlitBg.class": {
          "BlitBg":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;IIIIIII)V"
        },
        "DrawGlyphList.class": {
          "DrawGlyphList":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Lsun/font/GlyphList;)V"
        },
        "DrawGlyphListAA.class": {
          "DrawGlyphListAA":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Lsun/font/GlyphList;)V"
        },
        "DrawGlyphListLCD.class": {
          "DrawGlyphListLCD":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Lsun/font/GlyphList;)V"
        },
        "DrawLine.class": {
          "DrawLine":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IIII)V"
        },
        "DrawParallelogram.class": {
          "DrawParallelogram":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;DDDDDDDD)V"
        },
        "DrawPath.class": {
          "DrawPath":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IILjava/awt/geom/Path2D$Float;)V"
        },
        "DrawPolygons.class": {
          "DrawPolygons":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;[I[I[IIIIZ)V"
        },
        "DrawRect.class": {
          "DrawRect":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IIII)V"
        },
        "FillParallelogram.class": {
          "FillParallelogram":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;DDDDDD)V"
        },
        "FillPath.class": {
          "FillPath":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IILjava/awt/geom/Path2D$Float;)V"
        },
        "FillRect.class": {
          "FillRect":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IIII)V"
        },
        "FillSpans.class": {
          "FillSpans":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;IJLsun/java2d/pipe/SpanIterator;)V"
        },
        "GraphicsPrimitiveMgr.class": {
          "initIDs":
            "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V",
          "registerNativeLoops": "()V"
        },
        "MaskBlit.class": {
          "MaskBlit":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;IIIIII[BII)V"
        },
        "MaskFill.class": {
          "DrawAAPgram":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Ljava/awt/Composite;DDDDDDDD)V",
          "FillAAPgram":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Ljava/awt/Composite;DDDDDD)V",
          "MaskFill":
            "(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Ljava/awt/Composite;IIII[BII)V"
        },
        "ScaledBlit.class": {
          "Scale":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;IIIIDDDD)V"
        },
        "TransformBlit.class": {
          "Transform":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;Ljava/awt/geom/AffineTransform;IIIIIII)V"
        },
        "TransformHelper.class": {
          "Transform":
            "(Lsun/java2d/loops/MaskBlit;Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Ljava/awt/Composite;Lsun/java2d/pipe/Region;Ljava/awt/geom/AffineTransform;IIIIIIIII[III)V"
        }
      },
      "opengl": {
        "GLXGraphicsConfig.class": {
          "getGLXConfigInfo": "(II)J",
          "getOGLCapabilities": "(J)I",
          "initConfig": "(JJ)V"
        },
        "GLXSurfaceData.class": {
          "initOps": "(Lsun/awt/X11ComponentPeer;J)V",
          "initPbuffer": "(JJZII)Z"
        },
        "OGLContext.class": { "getOGLIdString": "()Ljava/lang/String;" },
        "OGLMaskFill.class": { "maskFill": "(IIIIIII[B)V" },
        "OGLRenderQueue.class": { "flushBuffer": "(JI)V" },
        "OGLRenderer.class": { "drawPoly": "([I[IIZII)V" },
        "OGLSurfaceData.class": {
          "getTextureID": "(J)I",
          "getTextureTarget": "(J)I",
          "initFBObject": "(JZZZII)Z",
          "initFlipBackbuffer": "(J)Z",
          "initTexture": "(JZZZII)Z"
        },
        "OGLTextRenderer.class": { "drawGlyphList": "(IZZZIFF[J[F)V" }
      },
      "pipe": {
        "BufferedMaskBlit.class": {
          "enqueueTile": "(JILsun/java2d/SurfaceData;JI[BIIIIIIIII)I"
        },
        "BufferedRenderPipe.class": {
          "fillSpans":
            "(Lsun/java2d/pipe/RenderQueue;JIILsun/java2d/pipe/SpanIterator;JII)I"
        },
        "Region.class": { "initIDs": "()V" },
        "ShapeSpanIterator.class": {
          "addSegment": "(I[F)V",
          "appendPoly": "([I[IIII)V",
          "closePath": "()V",
          "curveTo": "(FFFFFF)V",
          "dispose": "()V",
          "getNativeConsumer": "()J",
          "getNativeIterator": "()J",
          "getPathBox": "([I)V",
          "initIDs": "()V",
          "intersectClipBox": "(IIII)V",
          "lineTo": "(FF)V",
          "moveTo": "(FF)V",
          "nextSpan": "([I)Z",
          "pathDone": "()V",
          "quadTo": "(FFFF)V",
          "setNormalize": "(Z)V",
          "setOutputAreaXYXY": "(IIII)V",
          "setRule": "(I)V",
          "skipDownTo": "(I)V"
        },
        "SpanClipRenderer.class": {
          "eraseTile": "(Lsun/java2d/pipe/RegionIterator;[BII[I)V",
          "fillTile": "(Lsun/java2d/pipe/RegionIterator;[BII[I)V",
          "initIDs": "(Ljava/lang/Class;Ljava/lang/Class;)V"
        }
      },
      "x11": {
        "X11PMBlitBgLoops.class": { "nativeBlitBg": "(JJJIIIIIII)V" },
        "X11PMBlitLoops.class": {
          "nativeBlit": "(JJJLsun/java2d/pipe/Region;IIIIII)V",
          "updateBitmask":
            "(Lsun/java2d/SurfaceData;Lsun/java2d/SurfaceData;Z)V"
        },
        "X11Renderer.class": {
          "XDoPath":
            "(Lsun/java2d/SunGraphics2D;JJIILjava/awt/geom/Path2D$Float;Z)V",
          "XDrawArc": "(JJIIIIII)V",
          "XDrawLine": "(JJIIII)V",
          "XDrawOval": "(JJIIII)V",
          "XDrawPoly": "(JJII[I[IIZ)V",
          "XDrawRect": "(JJIIII)V",
          "XDrawRoundRect": "(JJIIIIII)V",
          "XFillArc": "(JJIIIIII)V",
          "XFillOval": "(JJIIII)V",
          "XFillPoly": "(JJII[I[II)V",
          "XFillRect": "(JJIIII)V",
          "XFillRoundRect": "(JJIIIIII)V",
          "XFillSpans": "(JJLsun/java2d/pipe/SpanIterator;JII)V",
          "devCopyArea": "(JJIIIIII)V"
        },
        "X11SurfaceData.class": {
          "XSetCopyMode": "(J)V",
          "XSetForeground": "(JI)V",
          "XSetXorMode": "(J)V",
          "initIDs": "(Ljava/lang/Class;Z)V",
          "initSurface": "(IIIJ)V",
          "isDgaAvailable": "()Z",
          "isShmPMAvailable": "()Z"
        },
        "XSurfaceData.class": {
          "XCreateGC": "(J)J",
          "XResetClip": "(J)V",
          "XSetClip": "(JIIIILsun/java2d/pipe/Region;)V",
          "XSetGraphicsExposures": "(JZ)V",
          "flushNativeSurface": "()V",
          "initOps":
            "(Lsun/awt/X11ComponentPeer;Lsun/awt/X11GraphicsConfig;I)V",
          "isDrawableValid": "()Z",
          "setInvalid": "()V"
        }
      },
      "xr": {
        "XIDGenerator.class": { "bufferXIDs": "([II)V" },
        "XRBackendNative.class": {
          "GCRectanglesNative": "(IJ[II)V",
          "XRAddGlyphsNative": "(I[JI[BI)V",
          "XRCreateLinearGradientPaintNative": "([F[SIIIIII)I",
          "XRCreateRadialGradientPaintNative": "([F[SIIIIII)I",
          "XRFreeGlyphsNative": "(I[II)V",
          "XRSetClipNative": "(JIIIILsun/java2d/pipe/Region;Z)V",
          "XRSetTransformNative": "(IIIIIII)V",
          "XRenderCompositeTextNative": "(IIIIIJ[I[III)V",
          "XRenderCreateGlyphSetNative": "(J)I",
          "XRenderRectanglesNative": "(IBSSSS[II)V",
          "copyArea": "(IIJIIIIII)V",
          "createGC": "(I)J",
          "createPictureNative": "(IJ)I",
          "createPixmap": "(IIII)I",
          "freeGC": "(J)V",
          "freePicture": "(I)V",
          "freePixmap": "(I)V",
          "initIDs": "()V",
          "padBlitNative": "(BIIIIIIIIIIIIIIIIIII)V",
          "putMaskNative": "(IJ[BIIIIIIIIFJ)V",
          "renderComposite": "(BIIIIIIIIIII)V",
          "renderCompositeTrapezoidsNative": "(BIJIII[I)V",
          "renderRectangle": "(IBSSSSIIII)V",
          "setFilter": "(II)V",
          "setGCExposures": "(JZ)V",
          "setGCForeground": "(JI)V",
          "setGCMode": "(JZ)V",
          "setPictureRepeat": "(II)V"
        },
        "XRMaskBlit.class": { "maskBlit": "(JJIIIIIIIII[B)V" },
        "XRMaskFill.class": { "maskFill": "(JIIIIIII[B)V" },
        "XRSurfaceData.class": {
          "XRInitSurface": "(IIIJI)V",
          "freeXSDOPicture": "(J)V",
          "initIDs": "()V",
          "initXRPicture": "(JI)V"
        }
      }
    },
    "management": {
      "ClassLoadingImpl.class": { "setVerboseClass": "(Z)V" },
      "DiagnosticCommandImpl.class": {
        "executeDiagnosticCommand": "(Ljava/lang/String;)Ljava/lang/String;",
        "getDiagnosticCommandInfo":
          "([Ljava/lang/String;)[Lsun/management/DiagnosticCommandInfo;",
        "getDiagnosticCommands": "()[Ljava/lang/String;",
        "setNotificationEnabled": "(Z)V"
      },
      "FileSystemImpl.class": {
        "isAccessUserOnly0": "(Ljava/lang/String;)Z"
      },
      "Flag.class": {
        "getAllFlagNames": "()[Ljava/lang/String;",
        "getFlags": "([Ljava/lang/String;[Lsun/management/Flag;I)I",
        "getInternalFlagCount": "()I",
        "initialize": "()V",
        "setBooleanValue": "(Ljava/lang/String;Z)V",
        "setLongValue": "(Ljava/lang/String;J)V",
        "setStringValue": "(Ljava/lang/String;Ljava/lang/String;)V"
      },
      "GarbageCollectorImpl.class": {
        "getCollectionCount": "()J",
        "getCollectionTime": "()J",
        "setNotificationEnabled":
          "(Lcom/sun/management/GarbageCollectorMXBean;Z)V"
      },
      "GcInfoBuilder.class": {
        "fillGcAttributeInfo":
          "(Ljava/lang/management/GarbageCollectorMXBean;I[Ljava/lang/String;[C[Ljava/lang/String;)V",
        "getLastGcInfo0":
          "(Ljava/lang/management/GarbageCollectorMXBean;I[Ljava/lang/Object;[C[Ljava/lang/management/MemoryUsage;[Ljava/lang/management/MemoryUsage;)Lcom/sun/management/GcInfo;",
        "getNumGcExtAttributes":
          "(Ljava/lang/management/GarbageCollectorMXBean;)I"
      },
      "HotSpotDiagnostic.class": { "dumpHeap0": "(Ljava/lang/String;Z)V" },
      "HotspotThread.class": {
        "getInternalThreadCount": "()I",
        "getInternalThreadTimes0": "([Ljava/lang/String;[J)I"
      },
      "MemoryImpl.class": {
        "getMemoryManagers0": "()[Ljava/lang/management/MemoryManagerMXBean;",
        "getMemoryPools0": "()[Ljava/lang/management/MemoryPoolMXBean;",
        "getMemoryUsage0": "(Z)Ljava/lang/management/MemoryUsage;",
        "setVerboseGC": "(Z)V"
      },
      "MemoryManagerImpl.class": {
        "getMemoryPools0": "()[Ljava/lang/management/MemoryPoolMXBean;"
      },
      "MemoryPoolImpl.class": {
        "getCollectionUsage0": "()Ljava/lang/management/MemoryUsage;",
        "getMemoryManagers0": "()[Ljava/lang/management/MemoryManagerMXBean;",
        "getPeakUsage0": "()Ljava/lang/management/MemoryUsage;",
        "getUsage0": "()Ljava/lang/management/MemoryUsage;",
        "resetPeakUsage0": "()V",
        "setCollectionThreshold0": "(JJ)V",
        "setPoolCollectionSensor": "(Lsun/management/Sensor;)V",
        "setPoolUsageSensor": "(Lsun/management/Sensor;)V",
        "setUsageThreshold0": "(JJ)V"
      },
      "OperatingSystemImpl.class": {
        "getCommittedVirtualMemorySize": "()J",
        "getFreePhysicalMemorySize": "()J",
        "getFreeSwapSpaceSize": "()J",
        "getMaxFileDescriptorCount": "()J",
        "getOpenFileDescriptorCount": "()J",
        "getProcessCpuLoad": "()D",
        "getProcessCpuTime": "()J",
        "getSystemCpuLoad": "()D",
        "getTotalPhysicalMemorySize": "()J",
        "getTotalSwapSpaceSize": "()J",
        "initialize": "()V"
      },
      "ThreadImpl.class": {
        "dumpThreads0": "([JZZ)[Ljava/lang/management/ThreadInfo;",
        "findDeadlockedThreads0": "()[Ljava/lang/Thread;",
        "findMonitorDeadlockedThreads0": "()[Ljava/lang/Thread;",
        "getThreadAllocatedMemory1": "([J[J)V",
        "getThreadInfo1": "([JI[Ljava/lang/management/ThreadInfo;)V",
        "getThreadTotalCpuTime0": "(J)J",
        "getThreadTotalCpuTime1": "([J[J)V",
        "getThreadUserCpuTime0": "(J)J",
        "getThreadUserCpuTime1": "([J[J)V",
        "getThreads": "()[Ljava/lang/Thread;",
        "resetContentionTimes0": "(J)V",
        "resetPeakThreadCount0": "()V",
        "setThreadAllocatedMemoryEnabled0": "(Z)V",
        "setThreadContentionMonitoringEnabled0": "(Z)V",
        "setThreadCpuTimeEnabled0": "(Z)V"
      },
      "VMManagementImpl.class": {
        "getAvailableProcessors": "()I",
        "getClassInitializationTime": "()J",
        "getClassLoadingTime": "()J",
        "getClassVerificationTime": "()J",
        "getDaemonThreadCount": "()I",
        "getInitializedClassCount": "()J",
        "getLiveThreadCount": "()I",
        "getLoadedClassSize": "()J",
        "getMethodDataSize": "()J",
        "getPeakThreadCount": "()I",
        "getProcessId": "()I",
        "getSafepointCount": "()J",
        "getSafepointSyncTime": "()J",
        "getStartupTime": "()J",
        "getTotalApplicationNonStoppedTime": "()J",
        "getTotalClassCount": "()J",
        "getTotalCompileTime": "()J",
        "getTotalSafepointTime": "()J",
        "getTotalThreadCount": "()J",
        "getUnloadedClassCount": "()J",
        "getUnloadedClassSize": "()J",
        "getUptime0": "()J",
        "getVerboseClass": "()Z",
        "getVerboseGC": "()Z",
        "getVersion0": "()Ljava/lang/String;",
        "getVmArguments0": "()[Ljava/lang/String;",
        "initOptionalSupportFields": "()V",
        "isThreadAllocatedMemoryEnabled": "()Z",
        "isThreadContentionMonitoringEnabled": "()Z",
        "isThreadCpuTimeEnabled": "()Z"
      }
    },
    "misc": {
      "GC.class": { "maxObjectInspectionAge": "()J" },
      "MessageUtils.class": {
        "toStderr": "(Ljava/lang/String;)V",
        "toStdout": "(Ljava/lang/String;)V"
      },
      "NativeSignalHandler.class": { "handle0": "(IJ)V" },
      "Perf.class": {
        "attach": "(Ljava/lang/String;II)Ljava/nio/ByteBuffer;",
        "createByteArray": "(Ljava/lang/String;II[BI)Ljava/nio/ByteBuffer;",
        "createLong": "(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer;",
        "detach": "(Ljava/nio/ByteBuffer;)V",
        "highResCounter": "()J",
        "highResFrequency": "()J",
        "registerNatives": "()V"
      },
      "Signal.class": {
        "findSignal": "(Ljava/lang/String;)I",
        "handle0": "(IJ)J",
        "raise0": "(I)V"
      },
      "URLClassPath.class": {
        "getLookupCacheForClassLoader":
          "(Ljava/lang/ClassLoader;Ljava/lang/String;)[I",
        "getLookupCacheURLs": "(Ljava/lang/ClassLoader;)[Ljava/net/URL;",
        "knownToNotExist0": "(Ljava/lang/ClassLoader;Ljava/lang/String;)Z"
      },
      "Unsafe.class": {
        "addressSize": "()I",
        "allocateInstance": "(Ljava/lang/Class;)Ljava/lang/Object;",
        "allocateMemory": "(J)J",
        "arrayBaseOffset": "(Ljava/lang/Class;)I",
        "arrayIndexScale": "(Ljava/lang/Class;)I",
        "compareAndSwapInt": "(Ljava/lang/Object;JII)Z",
        "compareAndSwapLong": "(Ljava/lang/Object;JJJ)Z",
        "compareAndSwapObject":
          "(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z",
        "copyMemory": "(Ljava/lang/Object;JLjava/lang/Object;JJ)V",
        "defineAnonymousClass":
          "(Ljava/lang/Class;[B[Ljava/lang/Object;)Ljava/lang/Class;",
        "defineClass":
          "(Ljava/lang/String;[BIILjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;",
        "ensureClassInitialized": "(Ljava/lang/Class;)V",
        "freeMemory": "(J)V",
        "fullFence": "()V",
        "getAddress": "(J)J",
        "getBoolean": "(Ljava/lang/Object;J)Z",
        "getBooleanVolatile": "(Ljava/lang/Object;J)Z",
        "getByte": "(J)B",
        "getByte": "(Ljava/lang/Object;J)B",
        "getByteVolatile": "(Ljava/lang/Object;J)B",
        "getChar": "(J)C",
        "getChar": "(Ljava/lang/Object;J)C",
        "getCharVolatile": "(Ljava/lang/Object;J)C",
        "getDouble": "(J)D",
        "getDouble": "(Ljava/lang/Object;J)D",
        "getDoubleVolatile": "(Ljava/lang/Object;J)D",
        "getFloat": "(J)F",
        "getFloat": "(Ljava/lang/Object;J)F",
        "getFloatVolatile": "(Ljava/lang/Object;J)F",
        "getInt": "(J)I",
        "getInt": "(Ljava/lang/Object;J)I",
        "getIntVolatile": "(Ljava/lang/Object;J)I",
        "getLoadAverage": "([DI)I",
        "getLong": "(J)J",
        "getLong": "(Ljava/lang/Object;J)J",
        "getLongVolatile": "(Ljava/lang/Object;J)J",
        "getObject": "(Ljava/lang/Object;J)Ljava/lang/Object;",
        "getObjectVolatile": "(Ljava/lang/Object;J)Ljava/lang/Object;",
        "getShort": "(J)S",
        "getShort": "(Ljava/lang/Object;J)S",
        "getShortVolatile": "(Ljava/lang/Object;J)S",
        "loadFence": "()V",
        "monitorEnter": "(Ljava/lang/Object;)V",
        "monitorExit": "(Ljava/lang/Object;)V",
        "objectFieldOffset": "(Ljava/lang/reflect/Field;)J",
        "pageSize": "()I",
        "park": "(ZJ)V",
        "putAddress": "(JJ)V",
        "putBoolean": "(Ljava/lang/Object;JZ)V",
        "putBooleanVolatile": "(Ljava/lang/Object;JZ)V",
        "putByte": "(JB)V",
        "putByte": "(Ljava/lang/Object;JB)V",
        "putByteVolatile": "(Ljava/lang/Object;JB)V",
        "putChar": "(JC)V",
        "putChar": "(Ljava/lang/Object;JC)V",
        "putCharVolatile": "(Ljava/lang/Object;JC)V",
        "putDouble": "(JD)V",
        "putDouble": "(Ljava/lang/Object;JD)V",
        "putDoubleVolatile": "(Ljava/lang/Object;JD)V",
        "putFloat": "(JF)V",
        "putFloat": "(Ljava/lang/Object;JF)V",
        "putFloatVolatile": "(Ljava/lang/Object;JF)V",
        "putInt": "(JI)V",
        "putInt": "(Ljava/lang/Object;JI)V",
        "putIntVolatile": "(Ljava/lang/Object;JI)V",
        "putLong": "(JJ)V",
        "putLong": "(Ljava/lang/Object;JJ)V",
        "putLongVolatile": "(Ljava/lang/Object;JJ)V",
        "putObject": "(Ljava/lang/Object;JLjava/lang/Object;)V",
        "putObjectVolatile": "(Ljava/lang/Object;JLjava/lang/Object;)V",
        "putOrderedInt": "(Ljava/lang/Object;JI)V",
        "putOrderedLong": "(Ljava/lang/Object;JJ)V",
        "putOrderedObject": "(Ljava/lang/Object;JLjava/lang/Object;)V",
        "putShort": "(JS)V",
        "putShort": "(Ljava/lang/Object;JS)V",
        "putShortVolatile": "(Ljava/lang/Object;JS)V",
        "reallocateMemory": "(JJ)J",
        "registerNatives": "()V",
        "setMemory": "(Ljava/lang/Object;JJB)V",
        "shouldBeInitialized": "(Ljava/lang/Class;)Z",
        "staticFieldBase": "(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
        "staticFieldOffset": "(Ljava/lang/reflect/Field;)J",
        "storeFence": "()V",
        "throwException": "(Ljava/lang/Throwable;)V",
        "tryMonitorEnter": "(Ljava/lang/Object;)Z",
        "unpark": "(Ljava/lang/Object;)V"
      },
      "VM.class": {
        "initialize": "()V",
        "latestUserDefinedLoader": "()Ljava/lang/ClassLoader;"
      },
      "VMSupport.class": {
        "getVMTemporaryDirectory": "()Ljava/lang/String;",
        "initAgentProperties":
          "(Ljava/util/Properties;)Ljava/util/Properties;"
      },
      "Version.class": {
        "getJdkSpecialVersion": "()Ljava/lang/String;",
        "getJdkVersionInfo": "()V",
        "getJvmSpecialVersion": "()Ljava/lang/String;",
        "getJvmVersionInfo": "()Z"
      }
    },
    "net": {
      "ExtendedOptionsImpl.class": {
        "flowSupported": "()Z",
        "getFlowOption": "(Ljava/io/FileDescriptor;Ljdk/net/SocketFlow;)V",
        "init": "()V",
        "setFlowOption": "(Ljava/io/FileDescriptor;Ljdk/net/SocketFlow;)V"
      },
      "PortConfig.class": { "getLower0": "()I", "getUpper0": "()I" },
      "dns": {
        "ResolverConfigurationImpl.class": {
          "fallbackDomain0": "()Ljava/lang/String;",
          "localDomain0": "()Ljava/lang/String;"
        }
      },
      "sdp": { "SdpSupport.class": { "convert0": "(I)V", "create0": "()I" } },
      "spi": {
        "DefaultProxySelector.class": {
          "getSystemProxy":
            "(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Proxy;",
          "init": "()Z"
        }
      }
    },
    "nio": {
      "ch": {
        "DatagramChannelImpl.class": {
          "disconnect0": "(Ljava/io/FileDescriptor;Z)V",
          "initIDs": "()V",
          "receive0": "(Ljava/io/FileDescriptor;JIZ)I",
          "send0": "(ZLjava/io/FileDescriptor;JILjava/net/InetAddress;I)I"
        },
        "DatagramDispatcher.class": {
          "read0": "(Ljava/io/FileDescriptor;JI)I",
          "readv0": "(Ljava/io/FileDescriptor;JI)J",
          "write0": "(Ljava/io/FileDescriptor;JI)I",
          "writev0": "(Ljava/io/FileDescriptor;JI)J"
        },
        "EPoll.class": {
          "dataOffset": "()I",
          "epollCreate": "()I",
          "epollCtl": "(IIII)I",
          "epollWait": "(IJI)I",
          "eventSize": "()I",
          "eventsOffset": "()I"
        },
        "EPollArrayWrapper.class": {
          "epollCreate": "()I",
          "epollCtl": "(IIII)V",
          "epollWait": "(JIJI)I",
          "init": "()V",
          "interrupt": "(I)V",
          "offsetofData": "()I",
          "sizeofEPollEvent": "()I"
        },
        "EPollPort.class": {
          "close0": "(I)V",
          "drain1": "(I)V",
          "interrupt": "(I)V",
          "socketpair": "([I)V"
        },
        "FileChannelImpl.class": {
          "initIDs": "()J",
          "map0": "(IJJ)J",
          "position0": "(Ljava/io/FileDescriptor;J)J",
          "transferTo0":
            "(Ljava/io/FileDescriptor;JJLjava/io/FileDescriptor;)J",
          "unmap0": "(JJ)I"
        },
        "FileDispatcherImpl.class": {
          "close0": "(Ljava/io/FileDescriptor;)V",
          "closeIntFD": "(I)V",
          "force0": "(Ljava/io/FileDescriptor;Z)I",
          "init": "()V",
          "lock0": "(Ljava/io/FileDescriptor;ZJJZ)I",
          "preClose0": "(Ljava/io/FileDescriptor;)V",
          "pread0": "(Ljava/io/FileDescriptor;JIJ)I",
          "pwrite0": "(Ljava/io/FileDescriptor;JIJ)I",
          "read0": "(Ljava/io/FileDescriptor;JI)I",
          "readv0": "(Ljava/io/FileDescriptor;JI)J",
          "release0": "(Ljava/io/FileDescriptor;JJ)V",
          "size0": "(Ljava/io/FileDescriptor;)J",
          "truncate0": "(Ljava/io/FileDescriptor;J)I",
          "write0": "(Ljava/io/FileDescriptor;JI)I",
          "writev0": "(Ljava/io/FileDescriptor;JI)J"
        },
        "FileKey.class": {
          "init": "(Ljava/io/FileDescriptor;)V",
          "initIDs": "()V"
        },
        "IOUtil.class": {
          "configureBlocking": "(Ljava/io/FileDescriptor;Z)V",
          "drain": "(I)Z",
          "fdLimit": "()I",
          "fdVal": "(Ljava/io/FileDescriptor;)I",
          "initIDs": "()V",
          "iovMax": "()I",
          "makePipe": "(Z)J",
          "randomBytes": "([B)Z",
          "setfdVal": "(Ljava/io/FileDescriptor;I)V"
        },
        "InheritedChannel.class": {
          "close0": "(I)V",
          "dup": "(I)I",
          "dup2": "(II)V",
          "open0": "(Ljava/lang/String;I)I",
          "peerAddress0": "(I)Ljava/net/InetAddress;",
          "peerPort0": "(I)I",
          "soType0": "(I)I"
        },
        "NativeThread.class": {
          "current": "()J",
          "init": "()V",
          "signal": "(J)V"
        },
        "Net.class": {
          "bind0": "(Ljava/io/FileDescriptor;ZZLjava/net/InetAddress;I)V",
          "blockOrUnblock4": "(ZLjava/io/FileDescriptor;III)I",
          "blockOrUnblock6": "(ZLjava/io/FileDescriptor;[BI[B)I",
          "canIPv6SocketJoinIPv4Group0": "()Z",
          "canJoin6WithIPv4Group0": "()Z",
          "connect0": "(ZLjava/io/FileDescriptor;Ljava/net/InetAddress;I)I",
          "getIntOption0": "(Ljava/io/FileDescriptor;ZII)I",
          "getInterface4": "(Ljava/io/FileDescriptor;)I",
          "getInterface6": "(Ljava/io/FileDescriptor;)I",
          "initIDs": "()V",
          "isExclusiveBindAvailable": "()I",
          "isIPv6Available0": "()Z",
          "joinOrDrop4": "(ZLjava/io/FileDescriptor;III)I",
          "joinOrDrop6": "(ZLjava/io/FileDescriptor;[BI[B)I",
          "listen": "(Ljava/io/FileDescriptor;I)V",
          "localInetAddress":
            "(Ljava/io/FileDescriptor;)Ljava/net/InetAddress;",
          "localPort": "(Ljava/io/FileDescriptor;)I",
          "poll": "(Ljava/io/FileDescriptor;IJ)I",
          "pollconnValue": "()S",
          "pollerrValue": "()S",
          "pollhupValue": "()S",
          "pollinValue": "()S",
          "pollnvalValue": "()S",
          "polloutValue": "()S",
          "remoteInetAddress":
            "(Ljava/io/FileDescriptor;)Ljava/net/InetAddress;",
          "remotePort": "(Ljava/io/FileDescriptor;)I",
          "setIntOption0": "(Ljava/io/FileDescriptor;ZIIIZ)V",
          "setInterface4": "(Ljava/io/FileDescriptor;I)V",
          "setInterface6": "(Ljava/io/FileDescriptor;I)V",
          "shutdown": "(Ljava/io/FileDescriptor;I)V",
          "socket0": "(ZZZZ)I"
        },
        "PollArrayWrapper.class": { "interrupt": "(I)V", "poll0": "(JIJ)I" },
        "ServerSocketChannelImpl.class": {
          "accept0":
            "(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/net/InetSocketAddress;)I",
          "initIDs": "()V"
        },
        "SocketChannelImpl.class": {
          "checkConnect": "(Ljava/io/FileDescriptor;ZZ)I",
          "sendOutOfBandData": "(Ljava/io/FileDescriptor;B)I"
        },
        "UnixAsynchronousServerSocketChannelImpl.class": {
          "accept0":
            "(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/net/InetSocketAddress;)I",
          "initIDs": "()V"
        },
        "UnixAsynchronousSocketChannelImpl.class": { "checkConnect": "(I)V" },
        "sctp": {
          "SctpChannelImpl.class": {
            "checkConnect": "(Ljava/io/FileDescriptor;ZZ)I",
            "initIDs": "()V",
            "receive0": "(ILsun/nio/ch/sctp/ResultContainer;JIZ)I",
            "send0": "(IJILjava/net/InetAddress;IIIZI)I"
          },
          "SctpNet.class": {
            "bindx": "(I[Ljava/net/InetAddress;IIZZ)V",
            "branch0": "(II)I",
            "close0": "(I)V",
            "connect0": "(ILjava/net/InetAddress;I)I",
            "getInitMsgOption0": "(I[I)V",
            "getIntOption0": "(II)I",
            "getLocalAddresses0": "(I)[Ljava/net/SocketAddress;",
            "getPrimAddrOption0": "(II)Ljava/net/SocketAddress;",
            "getRemoteAddresses0": "(II)[Ljava/net/SocketAddress;",
            "init": "()V",
            "listen0": "(II)V",
            "preClose0": "(I)V",
            "setInitMsgOption0": "(III)V",
            "setIntOption0": "(III)V",
            "setPeerPrimAddrOption0": "(IILjava/net/InetAddress;IZ)V",
            "setPrimAddrOption0": "(IILjava/net/InetAddress;I)V",
            "shutdown0": "(II)V",
            "socket0": "(Z)I"
          },
          "SctpServerChannelImpl.class": {
            "accept0":
              "(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/net/InetSocketAddress;)I",
            "initIDs": "()V"
          }
        }
      },
      "fs": {
        "GnomeFileTypeDetector.class": {
          "initializeGio": "()Z",
          "initializeGnomeVfs": "()Z",
          "probeUsingGio": "(J)[B",
          "probeUsingGnomeVfs": "(J)[B"
        },
        "LinuxNativeDispatcher.class": {
          "endmntent": "(J)V",
          "fgetxattr0": "(IJJI)I",
          "flistxattr": "(IJI)I",
          "fremovexattr0": "(IJ)V",
          "fsetxattr0": "(IJJI)V",
          "getmntent": "(JLsun/nio/fs/UnixMountEntry;)I",
          "init": "()V",
          "setmntent0": "(JJ)J"
        },
        "LinuxWatchService.class": {
          "configureBlocking": "(IZ)V",
          "eventOffsets": "()[I",
          "eventSize": "()I",
          "inotifyAddWatch": "(IJI)I",
          "inotifyInit": "()I",
          "inotifyRmWatch": "(II)V",
          "poll": "(II)I",
          "socketpair": "([I)V"
        },
        "MagicFileTypeDetector.class": {
          "initialize0": "()Z",
          "probe0": "(J)[B"
        },
        "UnixCopyFile.class": { "transfer": "(IIJ)V" },
        "UnixNativeDispatcher.class": {
          "access0": "(JI)V",
          "chmod0": "(JI)V",
          "chown0": "(JII)V",
          "close": "(I)V",
          "closedir": "(J)V",
          "dup": "(I)I",
          "fchmod": "(II)V",
          "fchown": "(III)V",
          "fclose": "(J)V",
          "fdopendir": "(I)J",
          "fopen0": "(JJ)J",
          "fpathconf": "(II)J",
          "fstat": "(ILsun/nio/fs/UnixFileAttributes;)V",
          "fstatat0": "(IJILsun/nio/fs/UnixFileAttributes;)V",
          "futimes": "(IJJ)V",
          "getcwd": "()[B",
          "getgrgid": "(I)[B",
          "getgrnam0": "(J)I",
          "getpwnam0": "(J)I",
          "getpwuid": "(I)[B",
          "init": "()I",
          "lchown0": "(JII)V",
          "link0": "(JJ)V",
          "lstat0": "(JLsun/nio/fs/UnixFileAttributes;)V",
          "mkdir0": "(JI)V",
          "mknod0": "(JIJ)V",
          "open0": "(JII)I",
          "openat0": "(IJII)I",
          "opendir0": "(J)J",
          "pathconf0": "(JI)J",
          "read": "(IJI)I",
          "readdir": "(J)[B",
          "readlink0": "(J)[B",
          "realpath0": "(J)[B",
          "rename0": "(JJ)V",
          "renameat0": "(IJIJ)V",
          "rmdir0": "(J)V",
          "stat0": "(JLsun/nio/fs/UnixFileAttributes;)V",
          "statvfs0": "(JLsun/nio/fs/UnixFileStoreAttributes;)V",
          "strerror": "(I)[B",
          "symlink0": "(JJ)V",
          "unlink0": "(J)V",
          "unlinkat0": "(IJI)V",
          "utimes0": "(JJJ)V",
          "write": "(IJI)I"
        }
      }
    },
    "print": {
      "CUPSPrinter.class": {
        "canConnect": "(Ljava/lang/String;I)Z",
        "getCupsPort": "()I",
        "getCupsServer": "()Ljava/lang/String;",
        "getMedia": "(Ljava/lang/String;)[Ljava/lang/String;",
        "getPageSizes": "(Ljava/lang/String;)[F",
        "initIDs": "()Z"
      }
    },
    "reflect": {
      "ConstantPool.class": {
        "getClassAt0": "(Ljava/lang/Object;I)Ljava/lang/Class;",
        "getClassAtIfLoaded0": "(Ljava/lang/Object;I)Ljava/lang/Class;",
        "getDoubleAt0": "(Ljava/lang/Object;I)D",
        "getFieldAt0": "(Ljava/lang/Object;I)Ljava/lang/reflect/Field;",
        "getFieldAtIfLoaded0":
          "(Ljava/lang/Object;I)Ljava/lang/reflect/Field;",
        "getFloatAt0": "(Ljava/lang/Object;I)F",
        "getIntAt0": "(Ljava/lang/Object;I)I",
        "getLongAt0": "(Ljava/lang/Object;I)J",
        "getMemberRefInfoAt0": "(Ljava/lang/Object;I)[Ljava/lang/String;",
        "getMethodAt0": "(Ljava/lang/Object;I)Ljava/lang/reflect/Member;",
        "getMethodAtIfLoaded0":
          "(Ljava/lang/Object;I)Ljava/lang/reflect/Member;",
        "getSize0": "(Ljava/lang/Object;)I",
        "getStringAt0": "(Ljava/lang/Object;I)Ljava/lang/String;",
        "getUTF8At0": "(Ljava/lang/Object;I)Ljava/lang/String;"
      },
      "NativeConstructorAccessorImpl.class": {
        "newInstance0":
          "(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      "NativeMethodAccessorImpl.class": {
        "invoke0":
          "(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
      },
      "Reflection.class": {
        "getCallerClass": "(I)Ljava/lang/Class;",
        "getCallerClass": "()Ljava/lang/Class;",
        "getClassAccessFlags": "(Ljava/lang/Class;)I"
      }
    },
    "security": {
      "jgss": {
        "wrapper": {
          "GSSLibStub.class": {
            "acceptContext":
              "(JLorg/ietf/jgss/ChannelBinding;[BLsun/security/jgss/wrapper/NativeGSSContext;)[B",
            "acquireCred": "(JII)J",
            "canonicalizeName": "(J)J",
            "compareName": "(JJ)Z",
            "deleteContext": "(J)J",
            "displayName": "(J)[Ljava/lang/Object;",
            "exportContext": "(J)[B",
            "exportName": "(J)[B",
            "getContextMech": "(J)Lorg/ietf/jgss/Oid;",
            "getContextName": "(JZ)J",
            "getContextTime": "(J)I",
            "getCredName": "(J)J",
            "getCredTime": "(J)I",
            "getCredUsage": "(J)I",
            "getMechPtr": "([B)J",
            "getMic": "(JI[B)[B",
            "importContext":
              "([B)Lsun/security/jgss/wrapper/NativeGSSContext;",
            "importName": "([BLorg/ietf/jgss/Oid;)J",
            "indicateMechs": "()[Lorg/ietf/jgss/Oid;",
            "init": "(Ljava/lang/String;Z)Z",
            "initContext":
              "(JJLorg/ietf/jgss/ChannelBinding;[BLsun/security/jgss/wrapper/NativeGSSContext;)[B",
            "inquireContext": "(J)[J",
            "inquireNamesForMech": "()[Lorg/ietf/jgss/Oid;",
            "releaseCred": "(J)J",
            "releaseName": "(J)V",
            "unwrap": "(J[BLorg/ietf/jgss/MessageProp;)[B",
            "verifyMic": "(J[B[BLorg/ietf/jgss/MessageProp;)V",
            "wrap": "(J[BLorg/ietf/jgss/MessageProp;)[B",
            "wrapSizeLimit": "(JIII)I"
          }
        }
      },
      "krb5": {
        "Config.class": { "getWindowsDirectory": "(Z)Ljava/lang/String;" },
        "Credentials.class": {
          "acquireDefaultNativeCreds": "([I)Lsun/security/krb5/Credentials;"
        },
        "SCDynamicStoreConfig.class": {
          "getKerberosConfig": "()Ljava/util/Hashtable;",
          "installNotificationCallback": "()V"
        }
      },
      "smartcardio": {
        "PCSC.class": {
          "SCardBeginTransaction": "(J)V",
          "SCardConnect": "(JLjava/lang/String;II)J",
          "SCardControl": "(JI[B)[B",
          "SCardDisconnect": "(JI)V",
          "SCardEndTransaction": "(JI)V",
          "SCardEstablishContext": "(I)J",
          "SCardGetStatusChange": "(JJ[I[Ljava/lang/String;)[I",
          "SCardListReaders": "(J)[Ljava/lang/String;",
          "SCardStatus": "(J[B)[B",
          "SCardTransmit": "(JI[BII)[B"
        },
        "PlatformPCSC.class": { "initialize": "(Ljava/lang/String;)V" }
      }
    },
    "tracing": {
      "dtrace": {
        "JVM.class": {
          "activate0":
            "(Ljava/lang/String;[Lsun/tracing/dtrace/DTraceProvider;)J",
          "defineClass0":
            "(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;",
          "dispose0": "(J)V",
          "isEnabled0": "(Ljava/lang/reflect/Method;)Z",
          "isSupported0": "()Z"
        }
      }
    }
  }
}
